{"version":3,"sources":["modules/Banner.js","modules/AddTask.js","modules/List.js","modules/TaskListManager.js","modules/FormControl.js","App.js","index.js"],"names":["Banner","props","style","display","type","className","onClick","formClick","AddTask","state","task","e","this","setState","target","value","lastTask","tasks","length","toogleTaskList","map","indexOf","name","onChange","handleChange","bind","id","React","Component","ButtonTrash","title","Task","useState","content","status","statut","setStatut","Fragment","checked","onTaskStatusChange","listIndex","taskIndex","htmlFor","onDelTask","Tasks","List","isToogle","handleClick","listofTask","color","date","onTrash","i","onUpdate","TaskListManager","tabList","data","forEach","push","FormControl","Date","getFullYear","getMonth","getDate","error","undefined","includes","test","submitNewList","preventDefault","border","onSubmit","handleSubmit","handleAddTask","handleLastTaskAdd","App","setListStatus","ListIndex","every","formActive","loadData","nextProps","nextState","localStorage","setItem","JSON","stringify","localData","parse","getItem","sort","i1","i2","list","newComers","Math","max","item","slice","splice","handleFormStatus","handleSubmitNewList","handleUpdateDataTask","handleTrashList","handleTrashTask","handleTaskStatusChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f630900b.chunk.js","sourcesContent":["const Banner = (props) =>(\n    <header>\n      <div style={{display:\"inline-block\"}}>\n        <h2>To do Appüìù</h2>\n        <small>By Rom√©o Kakpo</small>\n      </div>\n          <button type=\"button\" className=\"btn btn-dark pos\" onClick={() => props.formClick()}>\n              Nouvelle liste{\" \"}\n            <i className=\"bi bi-plus-circle\"/>\n          </button>\n    </header>\n  );\n\n  export default Banner;","import React from 'react'\n\nclass AddTask extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        task:\"\"\n      }\n    }\n    handleChange(e){\n      this.setState({\n        task:e.target.value\n      });\n      if(this.props.lastTask)\n        this.props.lastTask(e.target.value);\n    }\n    render(){\n      return(\n        <div>\n        {!this.props.tasks.length && \"Entrez votre t√¢che ci-dessous et cliquez sur le bouton + pour l'ajouter :)\"}\n          {!this.props.toogleTaskList && \n          <ul className=\"list-group\">{\n            this.props.tasks.map(task =>\n              <li key={`add${this.props.tasks.indexOf(task)}`} className=\"list-group-item\">\n                {task}\n              </li>)\n        }</ul>}\n        <div className=\"input-group mb-2\">\n          <input \n            type=\"text\" \n            name = \"tasks\"\n            className=\"form-control\" \n            aria-describedby=\"button-addon2\"\n            value={this.state.task} \n            onChange={this.handleChange.bind(this)}\n          />\n          <button \n            type=\"button\" \n            className=\"btn btn-outline-success\" \n            id=\"button-addon2\" \n            onClick={() => {\n              this.state.task && \n              this.props.tasks.indexOf(this.state.task) === -1&&\n              this.props.onClick(this.state.task);\n              this.setState({\n                task:''\n              });\n            }\n            }>\n            <i className=\"bi bi-plus-square\"/>\n          </button>\n        </div>\n        </div>\n      );\n    }\n  }\n\n  export default AddTask;","import React,{useState} from \"react\"\nimport AddTask from \"./AddTask\";\n\nfunction ButtonTrash(props){\n    return(\n    <button type=\"button\" className=\"btn btn-outline-danger\" title=\"Supprimer une t√¢che\">\n      <i className=\"bi bi-trash\"/>\n    </button>\n    );\n  }  \nfunction Task(props){\n  const [statut, setStatut] = useState(props.content.status);\n  return(\n    <React.Fragment>\n      <input id={`${props.id}-${props.tasks.indexOf(props.content)}`} \n        className=\"form-check-input me-2\" \n        type = \"checkbox\"\n        checked={statut}\n        onChange={(e) =>{\n          setStatut(e.target.checked);\n          props.onTaskStatusChange(props.listIndex,props.taskIndex,e.target.checked);\n        }}\n      />\n      <label htmlFor={`${props.id}-${props.tasks.indexOf(props.content)}`}>{props.content.content}</label>\n      <i className=\"bi bi-trash task-trash\"\n        onClick={() => props.onDelTask(props.listIndex,props.taskIndex)}\n      />\n    </React.Fragment>\n  )\n}\n\nfunction Tasks(props){ \n    return (props.tasks.map( (task,taskIndex) =>\n        <li key={`add${props.tasks.indexOf(task)}`} className=\"list-group-item\">\n          <Task content={task} \n            id={props.id}\n            listIndex={props.listIndex}\n            taskIndex={taskIndex}\n            onDelTask = {props.onDelTask}\n            onTaskStatusChange={props.onTaskStatusChange}\n            tasks={props.tasks}\n          />\n        </li>));\n  }\n\nclass List extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        isToogle:true,\n      };\n    }\n    handleClick(){\n      this.setState(state => ({\n        isToogle:!state.isToogle\n      }));\n    }\n    render(){\n      return(\n        <React.Fragment>\n          <div>\n            <ul className=\"list-group\">\n              <li className=\"list-group-item listTitle\" onClick={this.handleClick.bind(this)}>\n                <div style={{display:\"inline-block\"}}>\n                  <h3>{this.props.listofTask.name}{\" \"}\n                  {this.props.listofTask.status ?\n                    <i style={{color: \"lime\"}} className =\"bi bi-check-square-fill\" />\n                  :null}\n                  </h3>\n                  <small>{this.props.listofTask.date}</small>\n                </div>\n                <div className=\"buttonTrash\" onClick={() => this.props.onTrash(this.props.i)}>\n                  <ButtonTrash/>\n                </div>\n              </li>\n              {!this.state.isToogle &&\n                <React.Fragment>\n                  <Tasks tasks={this.props.listofTask.tasks} \n                    id={this.props.id}\n                    listIndex={this.props.i} \n                    onDelTask = {this.props.onDelTask}\n                    onTaskStatusChange={this.props.onTaskStatusChange}\n                  />\n                  <li className=\"list-group-item\">\n                    <AddTask tasks={this.props.listofTask.tasks.map(task => task.content)} \n                      onClick={(task) => this.props.onUpdate(this.props.i,task)}\n                      toogleTaskList = {true}\n                    />\n                  </li>\n                </React.Fragment>\n              }\n            </ul>\n          </div>\n          <hr/>\n        </React.Fragment>\n      );\n    }\n  }\n\n  export default List;","import List from \"./List\"\n\nfunction TaskListManager (props){\n    const tabList = [];\n    if(props.data.length){\n      props.data.forEach((listofTask,i) => {\n        tabList.push(\n        <List key={`${listofTask.id}`} \n          listofTask={listofTask} \n          id={listofTask.id}\n          onTrash = {props.onTrash}\n          onUpdate = {props.onUpdate}\n          onDelTask = {props.onDelTask}\n          onTaskStatusChange={props.onTaskStatusChange}\n          i = {i}\n        />);\n      });\n    }\n    if(!props.data.length)\n     return <div className=\"container text-primary\" >Pas de liste pour le moment :)</div>;\n    return <div className=\"container\">{tabList}</div>;\n  }\n\n  export default TaskListManager;\n","import React from \"react\";\nimport AddTask from \"./AddTask\";\n\nclass FormControl extends React.Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        name:\"\",\n        date:`${new Date().getFullYear()}-${((((new Date().getMonth()+1)+'').length === 1)?\n          \"0\"+(new Date().getMonth()+1): (new Date().getMonth()+1))}-${((((new Date().getDate())+'').length === 1)?\n            \"0\"+(new Date().getDate()): (new Date().getDate()))}`,\n        status:false,\n        tasks:[],\n        error:[false,false]\n      };\n    }\n    handleLastTaskAdd(task){\n      this.lastTask = task;\n    }\n    handleChange(e){\n      this.setState({\n        [e.target.name]:e.target.value\n      })\n    }\n    handleAddTask(task){\n      let tasks = [...this.state.tasks, task];\n      this.setState({\n        tasks:tasks\n      });\n    }\n    handleSubmit(e){\n      /*Ajouter le derni√®re √©l√©ment rest√© dans le formulaire,\n      On modfie directement l'√©tat car le changement n'alt√®re pas sur\n      le rendu*/\n      if(this.lastTask !==undefined &&  !this.state.tasks.includes(this.lastTask)){\n        this.state.tasks.push(this.lastTask);\n\t  }\n      let error = [false, false];\n      //V√©rification des donn√©es\n      if(!this.state.name){\n        error[0] = true;\n      }\n      if(/^\\d{4}-\\d{2}-\\d{2}$/.test(this.state.date)===false) error[1] = true;\n      if(error[0]===false && error[1]===false){\n        return this.props.submitNewList(this.state,e);\n      }\n      this.setState({\n        error:error\n      });\n      e.preventDefault();\n      return ;\n    }\n    render(){\n      return(\n        <div className=\"container form\" style={{border:\"1px solid #c6c6c6\"}}>\n              <form onSubmit={this.handleSubmit.bind(this)}>\n                <div className=\"mb-3\">\n                <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Nom de la liste</label>\n                  {this.state.error[0] && <span className=\"text-danger\"><br/>Nom obligatoire !</span>}\n                <input \n                  name=\"name\"\n                  type=\"text\" \n                  className=\"form-control\"\n                  id=\"exampleFormControlInput1\" \n                  value = {this.state.name}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n  \n              <div className=\"mb-3\">\n                <label htmlFor=\"exampleFormControlInput2\" className=\"form-label\">D√©finir la date</label>\n                {this.state.error[1] && <span className=\"text-danger\"><br/>Date Invalide !</span>}\n                <input \n                  name=\"date\"\n                  type=\"date\" \n                  className=\"form-control\" \n                  id=\"exampleFormControlInput2\"\n                  value = {this.state.date}\n                  onChange={this.handleChange.bind(this)}\n                />\n              </div>\n  \n              <AddTask \n                tasks={this.state.tasks} \n                onClick={this.handleAddTask.bind(this)}\n                lastTask={this.handleLastTaskAdd.bind(this)}\n              />\n  \n              <button type=\"submit\" className=\"btn btn-success mb-2\">\n                Ajouter{\" \"}\n              </button>\n              </form>\n        </div>    \n      );\n  \n    }\n  \n  }\n\n  export default FormControl;\n  ","import React, {Fragment} from 'react';\nimport Banner from \"./modules/Banner\"\nimport TaskListManager from './modules/TaskListManager';\nimport FormControl from './modules/FormControl';\nimport './style/App.css'\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      formActive:false,\n      data:[],\n    }\n  }\n  setListStatus = (data, ListIndex) => {\n    if(data[ListIndex].tasks.every(task => task.status)){\n      data[ListIndex].status = true;\n    }\n    else\n      data[ListIndex].status = false;\n  }\n  //D√®s que l'√©l√©ment se cr√©e dans le DOM\n  componentDidMount(){\n      this.loadData();\n  }\n  //Avant la mise √† jour de l'√©l√©ment\n  shouldComponentUpdate(nextProps, nextState) {\n    localStorage.setItem('todoAppList', JSON.stringify(nextState.data));\n    return true;\n  }\n  loadData(){\n    let localData;\n    try {\n      localData = JSON.parse(localStorage.getItem('todoAppList')); \n    } catch (e) {\n    }\n    this.setState({\n        data:localData?localData.sort((i1,i2) => i1.status-i2.status):[],\n    });\n  }\n\n  handleFormStatus(){\n    this.setState(state => ({\n      formActive:!state.formActive\n    }));\n  }\n\n  handleSubmitNewList(list,e){\n    \n    let newComers = {\n      name:list.name,\n      date:list.date,\n      tasks:list.tasks.map(task => ({content:task, status:false})),\n      id:(this.state.data.length)?Math.max(...this.state.data.map(item => item.id))+1:1,\n      status:false\n    }\n    this.setState(state => ({\n      formActive:!state.formActive,\n      data: [newComers,...state.data]\n    }));\n    e.preventDefault();\n  }\n\n  handleTrashList(i){\n    let data = this.state.data.slice();\n    data.splice(i,1);\n    this.setState({\n      data:data\n    });\n  }\n  //Ajout d'une t√¢che\n  handleUpdateDataTask(i,task){\n    let data = this.state.data.slice();\n    data[i].tasks.push({content:task, status:false});\n    this.setListStatus(data,i);\n    this.setState({\n      data:data\n    });\n  }\n  //Supprimer une tache d'une liste\n  handleTrashTask(ListIndex, taskIndex){\n    let data = this.state.data.slice();\n    data[ListIndex].tasks.splice(taskIndex,1);\n    this.setListStatus(data,ListIndex);\n    this.setState({\n      data:data\n    });\n  }\n  //Changer le status d'une t√¢che\n  handleTaskStatusChange(ListIndex, taskIndex,status){\n    let data = this.state.data.slice();\n    data[ListIndex].tasks[taskIndex].status = status;\n    //Verifier si toutes les t√¢ches sont faites\n    this.setListStatus(data,ListIndex);\n    this.setState({\n      data:data\n    });\n  }\n  render(){\n    return(\n      <Fragment>\n        <Banner formClick={this.handleFormStatus.bind(this)}/>\n        <div className=\"contenu\">\n          {this.state.formActive && \n            <FormControl submitNewList={this.handleSubmitNewList.bind(this)}/>\n          }\n          <TaskListManager data = {this.state.data}\n            onUpdate={this.handleUpdateDataTask.bind(this)}\n            onTrash={this.handleTrashList.bind(this)}\n            onDelTask = {this.handleTrashTask.bind(this)}\n            onTaskStatusChange={this.handleTaskStatusChange.bind(this)}\n          />\n        </div>\n      </Fragment> \n      );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './style/index.css'\nimport './style/App.css'\n\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}